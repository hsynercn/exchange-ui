[{"D:\\workspace\\exchange-ui\\src\\index.js":"1","D:\\workspace\\exchange-ui\\src\\App.js":"2","D:\\workspace\\exchange-ui\\src\\reportWebVitals.js":"3","D:\\workspace\\exchange-ui\\src\\MyFirstElement.js":"4","D:\\workspace\\exchange-ui\\src\\GitHubCards.js":"5","D:\\workspace\\exchange-ui\\src\\CurrencyElement.js":"6","D:\\workspace\\exchange-ui\\src\\HexagonElement.js":"7","D:\\workspace\\exchange-ui\\src\\CurrencyColors.js":"8"},{"size":781,"mtime":1612109358652,"results":"9","hashOfConfig":"10"},{"size":815,"mtime":1606335366352,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":904,"mtime":1606335326692,"results":"13","hashOfConfig":"10"},{"size":2326,"mtime":1608236532088,"results":"14","hashOfConfig":"10"},{"size":831,"mtime":1608616994339,"results":"15","hashOfConfig":"10"},{"size":19960,"mtime":1612109358651,"results":"16","hashOfConfig":"10"},{"size":11104,"mtime":1611610304951,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"jvmnhy",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\workspace\\exchange-ui\\src\\index.js",["39","40","41","42"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './demo.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Unified from \"./MyFirstElement\";\r\nimport Container from \"./GitHubCards\";\r\nimport CurrencyElement from \"./CurrencyElement\";\r\nimport PolygonSample from \"./HexagonElement\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div id=\"demo\" style={{backgroundColor: 'white'}}><PolygonSample/></div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["43","44"],"D:\\workspace\\exchange-ui\\src\\App.js",["45"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from \"react\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <Hello/>\n                <p>Hello React!</p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </header>\n        </div>\n    );\n}\n\nfunction Hello() {\n    return <div>Hello func!</div>\n}\n\nexport default App;\n","D:\\workspace\\exchange-ui\\src\\reportWebVitals.js",[],"D:\\workspace\\exchange-ui\\src\\MyFirstElement.js",[],"D:\\workspace\\exchange-ui\\src\\GitHubCards.js",["46"],"import React from \"react\";\r\nimport './GitHubCards.css';\r\nimport axios from 'axios';\r\n\r\n/*\r\n* These URL does not give any CORS error on a Google cloud app, why? */\r\n\r\nconst testData = [\r\n    {name: \"Dan Abramov\", avatar_url: \"https://avatars0.githubusercontent.com/u/810438?v=4\", company: \"@facebook\"},\r\n    {name: \"Sophie Alpert\", avatar_url: \"https://avatars2.githubusercontent.com/u/6820?v=4\", company: \"Humu\"},\r\n    {name: \"Sebastian MarkbÃ¥ge\", avatar_url: \"https://avatars2.githubusercontent.com/u/63648?v=4\", company: \"Facebook\"},\r\n];\r\n\r\nconst CardList = (props) => (\r\n    <div>\r\n        {props.profiles.map(profile => <Card {...profile}/>)}\r\n    </div>\r\n);\r\n\r\nclass Form extends React.Component {\r\n    state = {userName: ''};\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\r\n        this.props.onSubmit(resp.data);\r\n    };\r\n    render() {\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.userName}\r\n                    onChange={event => this.setState({userName: event.target.value})}\r\n                    placeholder=\"GitHub username\"\r\n                    required\r\n                />\r\n                <button>Add card</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        const profile = this.props;\r\n        return (\r\n            <div className=\"github-profile\">\r\n                <img src={profile.avatar_url}/>\r\n                <div className=\"info\">\r\n                    <div className=\"name\">{profile.name}</div>\r\n                    <div className=\"company\">{profile.company}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Container extends React.Component {\r\n    state = {\r\n        profiles: testData\r\n    };\r\n    addNewProfile = (profileData) => {\r\n        this.setState(prevState => ({profiles: [...prevState.profiles,profileData]}));\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.addNewProfile}/>\r\n                <CardList profiles={this.state.profiles}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Container;","D:\\workspace\\exchange-ui\\src\\CurrencyElement.js",[],"D:\\workspace\\exchange-ui\\src\\HexagonElement.js",[],"D:\\workspace\\exchange-ui\\src\\CurrencyColors.js",[],["47","48"],{"ruleId":"49","severity":1,"message":"50","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":11},{"ruleId":"49","severity":1,"message":"53","line":7,"column":8,"nodeType":"51","messageId":"52","endLine":7,"endColumn":15},{"ruleId":"49","severity":1,"message":"54","line":8,"column":8,"nodeType":"51","messageId":"52","endLine":8,"endColumn":17},{"ruleId":"49","severity":1,"message":"55","line":9,"column":8,"nodeType":"51","messageId":"52","endLine":9,"endColumn":23},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"49","severity":1,"message":"60","line":3,"column":16,"nodeType":"51","messageId":"52","endLine":3,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":48,"column":17,"nodeType":"63","endLine":48,"endColumn":48},{"ruleId":"56","replacedBy":"64"},{"ruleId":"58","replacedBy":"65"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Unified' is defined but never used.","'Container' is defined but never used.","'CurrencyElement' is defined but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["66"],["67"],"no-global-assign","no-unsafe-negation"]