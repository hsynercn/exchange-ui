[{"D:\\workspace\\exchange-ui\\src\\index.js":"1","D:\\workspace\\exchange-ui\\src\\App.js":"2","D:\\workspace\\exchange-ui\\src\\reportWebVitals.js":"3","D:\\workspace\\exchange-ui\\src\\CurrencyElement.js":"4","D:\\workspace\\exchange-ui\\src\\CurrencyColors.js":"5","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyMultipleSearchSelection.js":"6","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencySearchSelection.js":"7","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyManager.js":"8","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyGridDisplay.js":"9","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonGroup.js":"10","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonUtil.js":"11","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\HexagonGridUtils.js":"12","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\NumberFormattingUtil.js":"13","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\ColorUtil.js":"14","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\RegularConvexPolygon.js":"15","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonInnerText.js":"16"},{"size":847,"mtime":1613423093644,"results":"17","hashOfConfig":"18"},{"size":815,"mtime":1606335366352,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":831,"mtime":1608616994339,"results":"21","hashOfConfig":"18"},{"size":11025,"mtime":1613421432834,"results":"22","hashOfConfig":"18"},{"size":1051,"mtime":1613423346715,"results":"23","hashOfConfig":"18"},{"size":657,"mtime":1613423316833,"results":"24","hashOfConfig":"18"},{"size":5929,"mtime":1613415521030,"results":"25","hashOfConfig":"18"},{"size":7041,"mtime":1613510739704,"results":"26","hashOfConfig":"18"},{"size":3006,"mtime":1612989018490,"results":"27","hashOfConfig":"18"},{"size":2735,"mtime":1612986665275,"results":"28","hashOfConfig":"18"},{"size":3211,"mtime":1613289550874,"results":"29","hashOfConfig":"18"},{"size":893,"mtime":1613073106422,"results":"30","hashOfConfig":"18"},{"size":572,"mtime":1612640494149,"results":"31","hashOfConfig":"18"},{"size":5598,"mtime":1613508492663,"results":"32","hashOfConfig":"18"},{"size":893,"mtime":1613510587170,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"jvmnhy",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace\\exchange-ui\\src\\index.js",["72","73"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './obsolete/demo.css'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport CurrencyMultipleSearchSelection from \"./hexagon_currency_app/CurrencyMultipleSearchSelection\";\r\nimport CurrencySearchSelection from \"./hexagon_currency_app/CurrencySearchSelection\";\r\nimport CurrencyManager from \"./hexagon_currency_app/CurrencyManager\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <CurrencyManager/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["74","75"],"D:\\workspace\\exchange-ui\\src\\App.js",["76"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from \"react\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <Hello/>\n                <p>Hello React!</p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </header>\n        </div>\n    );\n}\n\nfunction Hello() {\n    return <div>Hello func!</div>\n}\n\nexport default App;\n",["77","78"],"D:\\workspace\\exchange-ui\\src\\reportWebVitals.js",[],"D:\\workspace\\exchange-ui\\src\\CurrencyElement.js",[],"D:\\workspace\\exchange-ui\\src\\CurrencyColors.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyMultipleSearchSelection.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencySearchSelection.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyManager.js",["79","80","81"],"import CurrencyGridDisplay from \"./CurrencyGridDisplay\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport CurrencySearchSelection from \"./CurrencySearchSelection\";\r\nimport CurrencyMultipleSearchSelection from \"./CurrencyMultipleSearchSelection\";\r\nimport {Dropdown} from \"semantic-ui-react\";\r\n\r\nconst useCurrencyManager = (props) => {\r\n    const [currencyDisplayType, setCurrencyDisplayType] = useState(\"radial\");\r\n\r\n    const [currencyDisplaySource, setCurrencyDisplaySource] = useState(\"USD\");\r\n    const [currencyDisplayDestinations, setCurrencyDisplayDestinations] = useState([\"TRY\", \"EUR\", \"GBP\", \"CAD\", \"ETH\", \"BTC\"]);\r\n    const [currencyVisualizationData, setCurrencyVisualizationData] = useState({\r\n        type: currencyDisplayType,\r\n        sourceCurrency: {entity: currencyDisplaySource},\r\n        destinationCurrencies: []\r\n    });\r\n\r\n    const [selectableCurrencyPool, setSelectableCurrencyPool] = useState([]);\r\n\r\n    function formatEmptyCurrenySlots(targetDestinationCurrencies, currencyVisualizationData) {\r\n        let i = 0;\r\n        for (i = targetDestinationCurrencies.length; i < 6; i++) {\r\n            currencyVisualizationData.destinationCurrencies.push({\r\n                entity: \"---\",\r\n                value: 0.0\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchCurrencyData() {\r\n            axios.get(`http://localhost:8080/currency`).then(response => {\r\n\r\n                let responseBaseCurrency = response.data.base;\r\n                let responseRateMap = {};\r\n                let responseCurrencyPool = [];\r\n                response.data.rates.forEach(rate => {\r\n                    responseRateMap[rate.entity] = rate;\r\n                    responseCurrencyPool.push({key: rate.entity, text: rate.entity, value: rate.entity});\r\n                });\r\n\r\n                setSelectableCurrencyPool(responseCurrencyPool)\r\n\r\n                let targetSourceCurrency = currencyDisplaySource;\r\n                let targetDestinationCurrencies = currencyDisplayDestinations;\r\n\r\n                let currencyVisualizationData = {type: \"\", sourceCurrency: {entity: \"\"}, destinationCurrencies: []};\r\n                currencyVisualizationData.type = currencyDisplayType;\r\n                if (targetSourceCurrency === responseBaseCurrency) {\r\n                    currencyVisualizationData.sourceCurrency.entity = targetSourceCurrency;\r\n\r\n                    targetDestinationCurrencies.forEach((value, index, array) => {\r\n                        currencyVisualizationData.destinationCurrencies.push({\r\n                            entity: responseRateMap[value].entity,\r\n                            value: responseRateMap[value].value\r\n                        });\r\n                    });\r\n\r\n                    formatEmptyCurrenySlots(targetDestinationCurrencies, currencyVisualizationData);\r\n\r\n                } else if (targetSourceCurrency in responseRateMap) {\r\n                    currencyVisualizationData.sourceCurrency.entity = targetSourceCurrency;\r\n\r\n                    let convertedRateMap = {};\r\n                    let divider = responseRateMap[targetSourceCurrency].value;\r\n                    response.data.rates.forEach(rate => {\r\n                        convertedRateMap[rate.entity] = rate;\r\n                        convertedRateMap[rate.entity].value = convertedRateMap[rate.entity].value / divider;\r\n                    });\r\n                    currencyVisualizationData.sourceCurrency.entity = targetSourceCurrency;\r\n\r\n                    targetDestinationCurrencies.forEach((value, index, array) => {\r\n                        currencyVisualizationData.destinationCurrencies.push({\r\n                            entity: convertedRateMap[value].entity,\r\n                            value: convertedRateMap[value].value\r\n                        });\r\n                    });\r\n\r\n                    formatEmptyCurrenySlots(targetDestinationCurrencies, currencyVisualizationData);\r\n\r\n\r\n                }\r\n                setCurrencyVisualizationData(currencyVisualizationData);\r\n            });\r\n        }\r\n\r\n        fetchCurrencyData();\r\n    }, [props, currencyDisplaySource, currencyDisplayDestinations]);\r\n    return {\r\n        currencyVisualizationData,\r\n        selectableCurrencyPool,\r\n        currencyDisplaySource,\r\n        setCurrencyDisplaySource,\r\n        currencyDisplayDestinations,\r\n        setCurrencyDisplayDestinations\r\n    };\r\n}\r\n\r\nconst CurrencyManager = (props) => {\r\n    const {\r\n        currencyVisualizationData,\r\n        selectableCurrencyPool,\r\n        currencyDisplaySource,\r\n        setCurrencyDisplaySource,\r\n        currencyDisplayDestinations,\r\n        setCurrencyDisplayDestinations\r\n    } = useCurrencyManager(props);\r\n    return (\r\n        <>\r\n            <CurrencyGridDisplay\r\n                currencyVisualizationData={currencyVisualizationData}\r\n                polygonCountLength={13}\r\n                polygonCountHeight={13}\r\n                defaultUnitPolygon={{\r\n                    edgeOffsetRatio: 0.036,\r\n                    startAngle: 90,\r\n                    numSides: 6,\r\n                    fillColor: '#ffffff',\r\n                    strokeColor: '#777777',\r\n                    text: \"\",\r\n                    textFontSize: 14,\r\n                    innerPolygonRatio: 0.0,\r\n                    innerFillColor: \"\",\r\n                }}\r\n            />\r\n            <CurrencySearchSelection setValue={setCurrencyDisplaySource}\r\n                                     options={selectableCurrencyPool}\r\n                                     value={currencyDisplaySource}/>\r\n            <CurrencyMultipleSearchSelection setValue={setCurrencyDisplayDestinations}\r\n                                             options={selectableCurrencyPool}\r\n                                             value={currencyDisplayDestinations}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CurrencyManager;","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyGridDisplay.js",["82","83","84","85","86","87","88","89","90","91","92"],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonGroup.js",["93","94","95","96","97","98"],"import RegularConvexPolygon from \"./RegularConvexPolygon\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst usePolygonGroup = (props) => {\r\n\r\n    let length = props.polygonCountLength;\r\n    let height = props.polygonCountHeight;\r\n    length = length % 2 === 1 ? length : length + 1;\r\n    height = height % 2 === 1 ? height : height + 1;\r\n\r\n    const [polygonCountLength, setPolygonCountLength] = useState(length);\r\n    const [polygonCountHeight, setPolygonCountHeight] = useState(height);\r\n\r\n    const [axialArray, setAxialArray] = useState(props.axialArray);\r\n    const [axialMap, setAxialMap] = useState(props.axialMap);\r\n\r\n    const[widthRatio, setWidthRatio] = useState(1 / polygonCountLength);\r\n\r\n    return {\r\n        polygonCountLength,\r\n        polygonCountHeight,\r\n        axialArray,\r\n        axialMap,\r\n        widthRatio\r\n    };\r\n}\r\n\r\nconst PolygonGroup = (props) => {\r\n    const {\r\n        polygonCountLength,\r\n        polygonCountHeight,\r\n        axialArray,\r\n        axialMap,\r\n        widthRatio,\r\n    } = usePolygonGroup(props);\r\n\r\n    const horizontalMargin = (1 / ((polygonCountLength * 2) + 1)) * 100;\r\n    const verticalMargin = horizontalMargin / Math.sqrt(3)\r\n\r\n    return (\r\n        <div style={{\r\n            width: \"80%\",\r\n            overflowX: \"auto\",\r\n            overflowY: \"auto\",\r\n            margin: \"0 auto\"\r\n        }}>\r\n            {\r\n                axialArray.map((row, index) => {\r\n\r\n                        let dynamicStyle = {};\r\n                        if (axialArray.length === index + 1) {\r\n                            dynamicStyle = {\r\n                                marginRight: horizontalMargin + \"%\",\r\n                            };\r\n                        } else if (index % 2 === 0) {\r\n                            if (index === 0) {\r\n                                dynamicStyle = {\r\n                                    marginRight: horizontalMargin + \"%\",\r\n                                    marginBottom: \"-\" + verticalMargin + \"%\",\r\n                                };\r\n                            } else {\r\n                                dynamicStyle = {\r\n                                    marginRight: horizontalMargin + \"%\",\r\n                                    marginBottom: \"-\" + verticalMargin + \"%\",\r\n                                };\r\n                            }\r\n                        } else {\r\n\r\n                            dynamicStyle = {\r\n                                marginLeft: horizontalMargin + \"%\",\r\n                                marginBottom: \"-\" + verticalMargin + \"%\",\r\n                            };\r\n\r\n                        }\r\n                        return <div\r\n                            style={dynamicStyle}>{\r\n                            row.map((element) => <RegularConvexPolygon widthRatio={widthRatio} {...axialMap[element]}\r\n                            />)\r\n                        }</div>\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default PolygonGroup;","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonUtil.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\HexagonGridUtils.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\NumberFormattingUtil.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\ColorUtil.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\RegularConvexPolygon.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonInnerText.js",["123","124"],{"ruleId":"125","severity":1,"message":"126","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":39},{"ruleId":"125","severity":1,"message":"129","line":8,"column":8,"nodeType":"127","messageId":"128","endLine":8,"endColumn":31},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"125","severity":1,"message":"134","line":3,"column":16,"nodeType":"127","messageId":"128","endLine":3,"endColumn":24},{"ruleId":"130","replacedBy":"135"},{"ruleId":"132","replacedBy":"136"},{"ruleId":"125","severity":1,"message":"137","line":6,"column":9,"nodeType":"127","messageId":"128","endLine":6,"endColumn":17},{"ruleId":"125","severity":1,"message":"138","line":9,"column":33,"nodeType":"127","messageId":"128","endLine":9,"endColumn":55},{"ruleId":"139","severity":1,"message":"140","line":89,"column":8,"nodeType":"141","endLine":89,"endColumn":67,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"143","line":10,"column":32,"nodeType":"127","messageId":"128","endLine":10,"endColumn":53},{"ruleId":"125","severity":1,"message":"144","line":11,"column":32,"nodeType":"127","messageId":"128","endLine":11,"endColumn":53},{"ruleId":"125","severity":1,"message":"145","line":12,"column":32,"nodeType":"127","messageId":"128","endLine":12,"endColumn":53},{"ruleId":"125","severity":1,"message":"146","line":16,"column":24,"nodeType":"127","messageId":"128","endLine":16,"endColumn":37},{"ruleId":"125","severity":1,"message":"147","line":19,"column":32,"nodeType":"127","messageId":"128","endLine":19,"endColumn":53},{"ruleId":"125","severity":1,"message":"148","line":20,"column":26,"nodeType":"127","messageId":"128","endLine":20,"endColumn":41},{"ruleId":"125","severity":1,"message":"149","line":21,"column":26,"nodeType":"127","messageId":"128","endLine":21,"endColumn":41},{"ruleId":"125","severity":1,"message":"150","line":22,"column":27,"nodeType":"127","messageId":"128","endLine":22,"endColumn":43},{"ruleId":"151","severity":1,"message":"152","line":68,"column":86,"nodeType":"153","messageId":"154","endLine":68,"endColumn":87},{"ruleId":"139","severity":1,"message":"155","line":101,"column":8,"nodeType":"141","endLine":101,"endColumn":15,"suggestions":"156"},{"ruleId":"125","severity":1,"message":"157","line":109,"column":9,"nodeType":"127","messageId":"128","endLine":109,"endColumn":27},{"ruleId":"125","severity":1,"message":"143","line":11,"column":32,"nodeType":"127","messageId":"128","endLine":11,"endColumn":53},{"ruleId":"125","severity":1,"message":"144","line":12,"column":32,"nodeType":"127","messageId":"128","endLine":12,"endColumn":53},{"ruleId":"125","severity":1,"message":"146","line":14,"column":24,"nodeType":"127","messageId":"128","endLine":14,"endColumn":37},{"ruleId":"125","severity":1,"message":"158","line":15,"column":22,"nodeType":"127","messageId":"128","endLine":15,"endColumn":33},{"ruleId":"125","severity":1,"message":"159","line":17,"column":23,"nodeType":"127","messageId":"128","endLine":17,"endColumn":36},{"ruleId":"125","severity":1,"message":"160","line":31,"column":9,"nodeType":"127","messageId":"128","endLine":31,"endColumn":27},{"ruleId":"125","severity":1,"message":"159","line":7,"column":24,"nodeType":"127","messageId":"128","endLine":7,"endColumn":37},{"ruleId":"125","severity":1,"message":"161","line":8,"column":20,"nodeType":"127","messageId":"128","endLine":8,"endColumn":29},{"ruleId":"125","severity":1,"message":"162","line":9,"column":29,"nodeType":"127","messageId":"128","endLine":9,"endColumn":47},{"ruleId":"125","severity":1,"message":"163","line":10,"column":24,"nodeType":"127","messageId":"128","endLine":10,"endColumn":37},{"ruleId":"125","severity":1,"message":"164","line":11,"column":22,"nodeType":"127","messageId":"128","endLine":11,"endColumn":33},{"ruleId":"125","severity":1,"message":"165","line":19,"column":23,"nodeType":"127","messageId":"128","endLine":19,"endColumn":35},{"ruleId":"125","severity":1,"message":"166","line":20,"column":27,"nodeType":"127","messageId":"128","endLine":20,"endColumn":43},{"ruleId":"125","severity":1,"message":"167","line":41,"column":19,"nodeType":"127","messageId":"128","endLine":41,"endColumn":27},{"ruleId":"125","severity":1,"message":"168","line":44,"column":29,"nodeType":"127","messageId":"128","endLine":44,"endColumn":47},{"ruleId":"125","severity":1,"message":"169","line":47,"column":32,"nodeType":"127","messageId":"128","endLine":47,"endColumn":53},{"ruleId":"125","severity":1,"message":"170","line":50,"column":18,"nodeType":"127","messageId":"128","endLine":50,"endColumn":25},{"ruleId":"125","severity":1,"message":"171","line":51,"column":18,"nodeType":"127","messageId":"128","endLine":51,"endColumn":25},{"ruleId":"139","severity":1,"message":"172","line":68,"column":8,"nodeType":"141","endLine":68,"endColumn":15,"suggestions":"173"},{"ruleId":"125","severity":1,"message":"174","line":70,"column":11,"nodeType":"127","messageId":"128","endLine":70,"endColumn":30},{"ruleId":"125","severity":1,"message":"175","line":75,"column":11,"nodeType":"127","messageId":"128","endLine":75,"endColumn":19},{"ruleId":"125","severity":1,"message":"176","line":81,"column":11,"nodeType":"127","messageId":"128","endLine":81,"endColumn":39},{"ruleId":"125","severity":1,"message":"177","line":120,"column":9,"nodeType":"127","messageId":"128","endLine":120,"endColumn":19},{"ruleId":"125","severity":1,"message":"178","line":121,"column":9,"nodeType":"127","messageId":"128","endLine":121,"endColumn":17},{"ruleId":"125","severity":1,"message":"179","line":122,"column":9,"nodeType":"127","messageId":"128","endLine":122,"endColumn":18},{"ruleId":"125","severity":1,"message":"180","line":123,"column":9,"nodeType":"127","messageId":"128","endLine":123,"endColumn":24},{"ruleId":"125","severity":1,"message":"181","line":124,"column":9,"nodeType":"127","messageId":"128","endLine":124,"endColumn":22},{"ruleId":"125","severity":1,"message":"182","line":125,"column":9,"nodeType":"127","messageId":"128","endLine":125,"endColumn":14},{"ruleId":"125","severity":1,"message":"183","line":133,"column":9,"nodeType":"127","messageId":"128","endLine":133,"endColumn":21},{"ruleId":"125","severity":1,"message":"184","line":134,"column":9,"nodeType":"127","messageId":"128","endLine":134,"endColumn":26},{"ruleId":"125","severity":1,"message":"185","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":28},{"ruleId":"125","severity":1,"message":"186","line":5,"column":24,"nodeType":"127","messageId":"128","endLine":5,"endColumn":37},"no-unused-vars","'CurrencyMultipleSearchSelection' is defined but never used.","Identifier","unusedVar","'CurrencySearchSelection' is defined but never used.","no-native-reassign",["187"],"no-negated-in-lhs",["188"],"'useState' is defined but never used.",["187"],["188"],"'Dropdown' is defined but never used.","'setCurrencyDisplayType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currencyDisplayType'. Either include it or remove the dependency array.","ArrayExpression",["189"],"'setPolygonCountLength' is assigned a value but never used.","'setPolygonCountHeight' is assigned a value but never used.","'setDefaultUnitPolygon' is assigned a value but never used.","'setAxialArray' is assigned a value but never used.","'setCustomizedPolygons' is assigned a value but never used.","'setOrientationX' is assigned a value but never used.","'setOrientationY' is assigned a value but never used.","'setFloatNumFault' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'axialMap', 'defaultUnitPolygon.fillColor', 'defaultUnitPolygon.innerFillColor', 'defaultUnitPolygon.innerPolygonRatio', 'defaultUnitPolygon.strokeColor', 'floatNumFault', 'orientationX', and 'orientationY'. Either include them or remove the dependency array.",["190"],"'defaultUnitPolygon' is assigned a value but never used.","'setAxialMap' is assigned a value but never used.","'setWidthRatio' is assigned a value but never used.","'polygonCountHeight' is assigned a value but never used.","'setRadius' is assigned a value but never used.","'setEdgeOffsetRatio' is assigned a value but never used.","'setStartAngle' is assigned a value but never used.","'setNumSides' is assigned a value but never used.","'setCenterAng' is assigned a value but never used.","'setEdgeOffsetLen' is assigned a value but never used.","'setEdges' is assigned a value but never used.","'setGeneratedPoints' is assigned a value but never used.","'setPolygonCoordinates' is assigned a value but never used.","'setXDim' is assigned a value but never used.","'setYDim' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'centerAng', 'edgeOffsetLen', 'edges', 'numSides', 'radius', and 'startAngle'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPolygonCoordinatesInner' needs the current value of 'edges'.",["191"],"'setTextWithFontSize' is assigned a value but never used.","'setColor' is assigned a value but never used.","'setInnerPolygonFullnessRatio' is assigned a value but never used.","'startAngle' is assigned a value but never used.","'numSides' is assigned a value but never used.","'centerAng' is assigned a value but never used.","'generatedPoints' is assigned a value but never used.","'edgeOffsetLen' is assigned a value but never used.","'edges' is assigned a value but never used.","'textFontSize' is assigned a value but never used.","'innerPolygonRatio' is assigned a value but never used.","'RegularConvexPolygon' is defined but never used.","'setLineMargin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [props, currencyDisplaySource, currencyDisplayDestinations, currencyDisplayType]",{"range":"198","text":"199"},"Update the dependencies array to be: [axialMap, defaultUnitPolygon.fillColor, defaultUnitPolygon.innerFillColor, defaultUnitPolygon.innerPolygonRatio, defaultUnitPolygon.strokeColor, floatNumFault, orientationX, orientationY, props]",{"range":"200","text":"201"},"Update the dependencies array to be: [centerAng, edgeOffsetLen, edges, numSides, props, radius, startAngle]",{"range":"202","text":"203"},[4154,4213],"[props, currencyDisplaySource, currencyDisplayDestinations, currencyDisplayType]",[5856,5863],"[axialMap, defaultUnitPolygon.fillColor, defaultUnitPolygon.innerFillColor, defaultUnitPolygon.innerPolygonRatio, defaultUnitPolygon.strokeColor, floatNumFault, orientationX, orientationY, props]",[3034,3041],"[centerAng, edgeOffsetLen, edges, numSides, props, radius, startAngle]"]