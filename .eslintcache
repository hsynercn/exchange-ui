[{"D:\\workspace\\exchange-ui\\src\\index.js":"1","D:\\workspace\\exchange-ui\\src\\App.js":"2","D:\\workspace\\exchange-ui\\src\\reportWebVitals.js":"3","D:\\workspace\\exchange-ui\\src\\CurrencyElement.js":"4","D:\\workspace\\exchange-ui\\src\\CurrencyColors.js":"5","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyMultipleSearchSelection.js":"6","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencySearchSelection.js":"7","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyManager.js":"8","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyGridDisplay.js":"9","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonGroup.js":"10","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonUtil.js":"11","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\HexagonGridUtils.js":"12","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\NumberFormattingUtil.js":"13","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\ColorUtil.js":"14","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\RegularConvexPolygon.js":"15","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonInnerText.js":"16"},{"size":847,"mtime":1613423093644,"results":"17","hashOfConfig":"18"},{"size":815,"mtime":1606335366352,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":831,"mtime":1608616994339,"results":"21","hashOfConfig":"18"},{"size":11025,"mtime":1613421432834,"results":"22","hashOfConfig":"18"},{"size":1037,"mtime":1617225636252,"results":"23","hashOfConfig":"18"},{"size":657,"mtime":1617226656464,"results":"24","hashOfConfig":"18"},{"size":7122,"mtime":1617311511416,"results":"25","hashOfConfig":"18"},{"size":7041,"mtime":1617308893694,"results":"26","hashOfConfig":"18"},{"size":3006,"mtime":1612989018490,"results":"27","hashOfConfig":"18"},{"size":2735,"mtime":1612986665275,"results":"28","hashOfConfig":"18"},{"size":3211,"mtime":1613289550874,"results":"29","hashOfConfig":"18"},{"size":978,"mtime":1617222918508,"results":"30","hashOfConfig":"18"},{"size":572,"mtime":1612640494149,"results":"31","hashOfConfig":"18"},{"size":5598,"mtime":1613508492663,"results":"32","hashOfConfig":"18"},{"size":893,"mtime":1613510587170,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"jvmnhy",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"37"},"D:\\workspace\\exchange-ui\\src\\index.js",["73","74"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './obsolete/demo.css'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport CurrencyMultipleSearchSelection from \"./hexagon_currency_app/CurrencyMultipleSearchSelection\";\r\nimport CurrencySearchSelection from \"./hexagon_currency_app/CurrencySearchSelection\";\r\nimport CurrencyManager from \"./hexagon_currency_app/CurrencyManager\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <CurrencyManager/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["75","76"],"D:\\workspace\\exchange-ui\\src\\App.js",["77"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from \"react\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <Hello/>\n                <p>Hello React!</p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </header>\n        </div>\n    );\n}\n\nfunction Hello() {\n    return <div>Hello func!</div>\n}\n\nexport default App;\n",["78","79"],"D:\\workspace\\exchange-ui\\src\\reportWebVitals.js",[],"D:\\workspace\\exchange-ui\\src\\CurrencyElement.js",[],"D:\\workspace\\exchange-ui\\src\\CurrencyColors.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyMultipleSearchSelection.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencySearchSelection.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyManager.js",["80","81","82","83","84"],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\CurrencyGridDisplay.js",["85","86","87","88","89","90","91","92","93","94","95"],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonGroup.js",["96","97","98","99","100","101"],"import RegularConvexPolygon from \"./RegularConvexPolygon\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst usePolygonGroup = (props) => {\r\n\r\n    let length = props.polygonCountLength;\r\n    let height = props.polygonCountHeight;\r\n    length = length % 2 === 1 ? length : length + 1;\r\n    height = height % 2 === 1 ? height : height + 1;\r\n\r\n    const [polygonCountLength, setPolygonCountLength] = useState(length);\r\n    const [polygonCountHeight, setPolygonCountHeight] = useState(height);\r\n\r\n    const [axialArray, setAxialArray] = useState(props.axialArray);\r\n    const [axialMap, setAxialMap] = useState(props.axialMap);\r\n\r\n    const[widthRatio, setWidthRatio] = useState(1 / polygonCountLength);\r\n\r\n    return {\r\n        polygonCountLength,\r\n        polygonCountHeight,\r\n        axialArray,\r\n        axialMap,\r\n        widthRatio\r\n    };\r\n}\r\n\r\nconst PolygonGroup = (props) => {\r\n    const {\r\n        polygonCountLength,\r\n        polygonCountHeight,\r\n        axialArray,\r\n        axialMap,\r\n        widthRatio,\r\n    } = usePolygonGroup(props);\r\n\r\n    const horizontalMargin = (1 / ((polygonCountLength * 2) + 1)) * 100;\r\n    const verticalMargin = horizontalMargin / Math.sqrt(3)\r\n\r\n    return (\r\n        <div style={{\r\n            width: \"80%\",\r\n            overflowX: \"auto\",\r\n            overflowY: \"auto\",\r\n            margin: \"0 auto\"\r\n        }}>\r\n            {\r\n                axialArray.map((row, index) => {\r\n\r\n                        let dynamicStyle = {};\r\n                        if (axialArray.length === index + 1) {\r\n                            dynamicStyle = {\r\n                                marginRight: horizontalMargin + \"%\",\r\n                            };\r\n                        } else if (index % 2 === 0) {\r\n                            if (index === 0) {\r\n                                dynamicStyle = {\r\n                                    marginRight: horizontalMargin + \"%\",\r\n                                    marginBottom: \"-\" + verticalMargin + \"%\",\r\n                                };\r\n                            } else {\r\n                                dynamicStyle = {\r\n                                    marginRight: horizontalMargin + \"%\",\r\n                                    marginBottom: \"-\" + verticalMargin + \"%\",\r\n                                };\r\n                            }\r\n                        } else {\r\n\r\n                            dynamicStyle = {\r\n                                marginLeft: horizontalMargin + \"%\",\r\n                                marginBottom: \"-\" + verticalMargin + \"%\",\r\n                            };\r\n\r\n                        }\r\n                        return <div\r\n                            style={dynamicStyle}>{\r\n                            row.map((element) => <RegularConvexPolygon widthRatio={widthRatio} {...axialMap[element]}\r\n                            />)\r\n                        }</div>\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default PolygonGroup;","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonUtil.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\HexagonGridUtils.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\NumberFormattingUtil.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\ColorUtil.js",[],"D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\RegularConvexPolygon.js",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React, {useEffect, useState} from 'react'\r\nimport PolygonUtils from \"./PolygonUtil\";\r\nimport PolygonInnerText from \"./PolygonInnerText\";\r\n\r\nconst useRegularConvexPolygon = (props) => {\r\n\r\n    const [widthRatio, setWidthRatio] = useState(props.widthRatio);\r\n    const [radius, setRadius] = useState(30);\r\n    const [edgeOffsetRatio, setEdgeOffsetRatio] = useState(props.edgeOffsetRatio);\r\n    const [startAngle, setStartAngle] = useState(props.startAngle);\r\n    const [numSides, setNumSides] = useState(props.numSides);\r\n    const [fillColor, setFillColor] = useState(props.fillColor);\r\n    const [strokeColor, setStrokeColor] = useState(props.strokeColor);\r\n    const [text, setText] = useState(props.text);\r\n    const [textFontSize, setTextFontSize] = useState(props.textFontSize);\r\n    const [innerPolygonRatio, setInnerPolygonRatio] = useState(props.innerPolygonRatio);\r\n    const [innerFillColor, setInnerFillColor] = useState(props.innerFillColor);\r\n\r\n    const [centerAng, setCenterAng] = useState(2 * Math.PI / numSides);\r\n    const [edgeOffsetLen, setEdgeOffsetLen] = useState(radius * edgeOffsetRatio / 2);\r\n\r\n    const tempGeneratedPoints = PolygonUtils.generatePoints(\r\n        numSides,\r\n        radius,\r\n        centerAng,\r\n        startAngle);\r\n\r\n    let generatedPointsOuter = PolygonUtils.generatePoints(\r\n        numSides,\r\n        radius + edgeOffsetLen,\r\n        centerAng,\r\n        startAngle);\r\n\r\n    const tempGeneratedPointsInner = PolygonUtils.generatePoints(\r\n        numSides,\r\n        (radius + edgeOffsetLen) * innerPolygonRatio,\r\n        centerAng,\r\n        startAngle);\r\n\r\n\r\n    const [edges, setEdges] = useState(PolygonUtils.getEdgePoints(generatedPointsOuter));\r\n    let dimensions = PolygonUtils.getDimensions(edges);\r\n\r\n    const [generatedPoints, setGeneratedPoints] = useState(PolygonUtils.getShiftedPositiveQuadrant(tempGeneratedPoints, edges));\r\n    const [generatedPointsInner, setGeneratedPointsInner] = useState(PolygonUtils.getShiftedPositiveQuadrant(tempGeneratedPointsInner, edges));\r\n\r\n    const [polygonCoordinates, setPolygonCoordinates] = useState(generatedPoints.map(pair => pair.join(',')).join(' '));\r\n    const [polygonCoordinatesInner, setPolygonCoordinatesInner] = useState(generatedPointsInner.map(pair => pair.join(',')).join(' '));\r\n\r\n    const [xDim, setXDim] = useState(dimensions.xDim);\r\n    const [yDim, setYDim] = useState(dimensions.yDim);\r\n\r\n    useEffect(() => {\r\n        setFillColor(props.fillColor);\r\n        setStrokeColor(props.strokeColor);\r\n        setInnerFillColor(props.innerFillColor);\r\n        setInnerPolygonRatio(props.innerPolygonRatio);\r\n        setText(props.text);\r\n        setTextFontSize(props.textFontSize);\r\n\r\n        const tempGeneratedPointsInner = PolygonUtils.generatePoints(\r\n            numSides,\r\n            (radius + edgeOffsetLen) * props.innerPolygonRatio,\r\n            centerAng,\r\n            startAngle);\r\n        setPolygonCoordinatesInner(PolygonUtils.getShiftedPositiveQuadrant(tempGeneratedPointsInner, edges));\r\n\r\n    }, [props]);\r\n\r\n    const setTextWithFontSize = (text, textFontSize) => {\r\n        setText(text);\r\n        setTextFontSize(textFontSize);\r\n    }\r\n\r\n    const setColor = (fillColor, strokeColor, innerFillColor) => {\r\n        setFillColor(fillColor);\r\n        setStrokeColor(strokeColor);\r\n        setInnerFillColor(innerFillColor);\r\n    }\r\n\r\n    const setInnerPolygonFullnessRatio = (ratio) => {\r\n        let generatedPointsInner = PolygonUtils.generatePoints(\r\n            numSides,\r\n            (radius + edgeOffsetLen) * ratio,\r\n            centerAng,\r\n            startAngle);\r\n        generatedPointsInner = PolygonUtils.getShiftedPositiveQuadrant(generatedPointsInner, edges);\r\n        let polygonCoordinatesInner = generatedPointsInner.map(pair => pair.join(',')).join(' ');\r\n        setGeneratedPointsInner(generatedPointsInner);\r\n        setInnerPolygonRatio(ratio);\r\n        setPolygonCoordinatesInner(polygonCoordinatesInner);\r\n    }\r\n\r\n    return {\r\n        widthRatio,\r\n        edgeOffsetRatio,\r\n        startAngle,\r\n        numSides,\r\n        centerAng,\r\n        generatedPoints,\r\n        edgeOffsetLen,\r\n        edges,\r\n        xDim,\r\n        yDim,\r\n        polygonCoordinates,\r\n        polygonCoordinatesInner,\r\n        fillColor,\r\n        strokeColor,\r\n        text,\r\n        textFontSize,\r\n        innerPolygonRatio,\r\n        innerFillColor,\r\n    };\r\n}\r\n\r\nconst RegularConvexPolygon = (props) => {\r\n    const {\r\n        widthRatio,\r\n        edgeOffsetRatio,\r\n        startAngle,\r\n        numSides,\r\n        centerAng,\r\n        generatedPoints,\r\n        edgeOffsetLen,\r\n        edges,\r\n        xDim,\r\n        yDim,\r\n        polygonCoordinates,\r\n        polygonCoordinatesInner,\r\n        fillColor,\r\n        strokeColor,\r\n        text,\r\n        textFontSize,\r\n        innerPolygonRatio,\r\n        innerFillColor,\r\n    } = useRegularConvexPolygon(props);\r\n\r\n    return (\r\n        <svg\r\n            width={(widthRatio * 100) + \"%\"}\r\n            viewBox={\"0 0 \" + xDim + \" \" + yDim}\r\n            style={{verticalAlign: 'top'}}\r\n        >\r\n            <polygon points={polygonCoordinates} style={{\r\n                fill: fillColor,\r\n                stroke: strokeColor,\r\n                strokeWidth: (100 * edgeOffsetRatio) + \"%\",\r\n                verticalAlign: 'top'\r\n            }}/>\r\n            <polygon points={polygonCoordinatesInner} style={{\r\n                fill: innerFillColor,\r\n                verticalAlign: 'top'\r\n            }}/>\r\n            <PolygonInnerText text={text}/>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default RegularConvexPolygon;","D:\\workspace\\exchange-ui\\src\\hexagon_currency_app\\PolygonInnerText.js",["126","127"],"import RegularConvexPolygon from \"./RegularConvexPolygon\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst PolygonInnerText = (props) => {\r\n    const [lineMargin, setLineMargin] = useState(26);\r\n    return (\r\n        <>\r\n            {\r\n                props.text.split(\"\\n\").map((line, index, array) => <text\r\n                    x={\"50%\"}\r\n                    //y={\"50%\"}\r\n                    y={(50 - ((array.length - 1) * (lineMargin / 2)) + (lineMargin * (index))) + \"%\"}\r\n                    // y={((40 + index * 20) + \"%\")}\r\n                    textAnchor={\"middle\"}\r\n                    dominant-baseline={\"middle\"}\r\n                    fontFamily={\"Arial\"}\r\n                    fill={\"black\"}\r\n                    fontSize={\"medium\"}\r\n                    fontWeight={\"normal\"}\r\n                >{line}</text>)\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PolygonInnerText;",{"ruleId":"128","severity":1,"message":"129","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":39},{"ruleId":"128","severity":1,"message":"132","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":31},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"128","severity":1,"message":"137","line":3,"column":16,"nodeType":"130","messageId":"131","endLine":3,"endColumn":24},{"ruleId":"133","replacedBy":"138"},{"ruleId":"135","replacedBy":"139"},{"ruleId":"128","severity":1,"message":"140","line":6,"column":9,"nodeType":"130","messageId":"131","endLine":6,"endColumn":17},{"ruleId":"128","severity":1,"message":"141","line":10,"column":33,"nodeType":"130","messageId":"131","endLine":10,"endColumn":55},{"ruleId":"142","severity":1,"message":"143","line":98,"column":8,"nodeType":"144","endLine":98,"endColumn":67,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":120,"column":45,"nodeType":"148","messageId":"149","endLine":120,"endColumn":47},{"ruleId":"146","severity":1,"message":"147","line":138,"column":45,"nodeType":"148","messageId":"149","endLine":138,"endColumn":47},{"ruleId":"128","severity":1,"message":"150","line":10,"column":32,"nodeType":"130","messageId":"131","endLine":10,"endColumn":53},{"ruleId":"128","severity":1,"message":"151","line":11,"column":32,"nodeType":"130","messageId":"131","endLine":11,"endColumn":53},{"ruleId":"128","severity":1,"message":"152","line":12,"column":32,"nodeType":"130","messageId":"131","endLine":12,"endColumn":53},{"ruleId":"128","severity":1,"message":"153","line":16,"column":24,"nodeType":"130","messageId":"131","endLine":16,"endColumn":37},{"ruleId":"128","severity":1,"message":"154","line":19,"column":32,"nodeType":"130","messageId":"131","endLine":19,"endColumn":53},{"ruleId":"128","severity":1,"message":"155","line":20,"column":26,"nodeType":"130","messageId":"131","endLine":20,"endColumn":41},{"ruleId":"128","severity":1,"message":"156","line":21,"column":26,"nodeType":"130","messageId":"131","endLine":21,"endColumn":41},{"ruleId":"128","severity":1,"message":"157","line":22,"column":27,"nodeType":"130","messageId":"131","endLine":22,"endColumn":43},{"ruleId":"158","severity":1,"message":"159","line":68,"column":86,"nodeType":"148","messageId":"160","endLine":68,"endColumn":87},{"ruleId":"142","severity":1,"message":"161","line":101,"column":8,"nodeType":"144","endLine":101,"endColumn":15,"suggestions":"162"},{"ruleId":"128","severity":1,"message":"163","line":109,"column":9,"nodeType":"130","messageId":"131","endLine":109,"endColumn":27},{"ruleId":"128","severity":1,"message":"150","line":11,"column":32,"nodeType":"130","messageId":"131","endLine":11,"endColumn":53},{"ruleId":"128","severity":1,"message":"151","line":12,"column":32,"nodeType":"130","messageId":"131","endLine":12,"endColumn":53},{"ruleId":"128","severity":1,"message":"153","line":14,"column":24,"nodeType":"130","messageId":"131","endLine":14,"endColumn":37},{"ruleId":"128","severity":1,"message":"164","line":15,"column":22,"nodeType":"130","messageId":"131","endLine":15,"endColumn":33},{"ruleId":"128","severity":1,"message":"165","line":17,"column":23,"nodeType":"130","messageId":"131","endLine":17,"endColumn":36},{"ruleId":"128","severity":1,"message":"166","line":31,"column":9,"nodeType":"130","messageId":"131","endLine":31,"endColumn":27},{"ruleId":"128","severity":1,"message":"165","line":7,"column":24,"nodeType":"130","messageId":"131","endLine":7,"endColumn":37},{"ruleId":"128","severity":1,"message":"167","line":8,"column":20,"nodeType":"130","messageId":"131","endLine":8,"endColumn":29},{"ruleId":"128","severity":1,"message":"168","line":9,"column":29,"nodeType":"130","messageId":"131","endLine":9,"endColumn":47},{"ruleId":"128","severity":1,"message":"169","line":10,"column":24,"nodeType":"130","messageId":"131","endLine":10,"endColumn":37},{"ruleId":"128","severity":1,"message":"170","line":11,"column":22,"nodeType":"130","messageId":"131","endLine":11,"endColumn":33},{"ruleId":"128","severity":1,"message":"171","line":19,"column":23,"nodeType":"130","messageId":"131","endLine":19,"endColumn":35},{"ruleId":"128","severity":1,"message":"172","line":20,"column":27,"nodeType":"130","messageId":"131","endLine":20,"endColumn":43},{"ruleId":"128","severity":1,"message":"173","line":41,"column":19,"nodeType":"130","messageId":"131","endLine":41,"endColumn":27},{"ruleId":"128","severity":1,"message":"174","line":44,"column":29,"nodeType":"130","messageId":"131","endLine":44,"endColumn":47},{"ruleId":"128","severity":1,"message":"175","line":47,"column":32,"nodeType":"130","messageId":"131","endLine":47,"endColumn":53},{"ruleId":"128","severity":1,"message":"176","line":50,"column":18,"nodeType":"130","messageId":"131","endLine":50,"endColumn":25},{"ruleId":"128","severity":1,"message":"177","line":51,"column":18,"nodeType":"130","messageId":"131","endLine":51,"endColumn":25},{"ruleId":"142","severity":1,"message":"178","line":68,"column":8,"nodeType":"144","endLine":68,"endColumn":15,"suggestions":"179"},{"ruleId":"128","severity":1,"message":"180","line":70,"column":11,"nodeType":"130","messageId":"131","endLine":70,"endColumn":30},{"ruleId":"128","severity":1,"message":"181","line":75,"column":11,"nodeType":"130","messageId":"131","endLine":75,"endColumn":19},{"ruleId":"128","severity":1,"message":"182","line":81,"column":11,"nodeType":"130","messageId":"131","endLine":81,"endColumn":39},{"ruleId":"128","severity":1,"message":"183","line":120,"column":9,"nodeType":"130","messageId":"131","endLine":120,"endColumn":19},{"ruleId":"128","severity":1,"message":"184","line":121,"column":9,"nodeType":"130","messageId":"131","endLine":121,"endColumn":17},{"ruleId":"128","severity":1,"message":"185","line":122,"column":9,"nodeType":"130","messageId":"131","endLine":122,"endColumn":18},{"ruleId":"128","severity":1,"message":"186","line":123,"column":9,"nodeType":"130","messageId":"131","endLine":123,"endColumn":24},{"ruleId":"128","severity":1,"message":"187","line":124,"column":9,"nodeType":"130","messageId":"131","endLine":124,"endColumn":22},{"ruleId":"128","severity":1,"message":"188","line":125,"column":9,"nodeType":"130","messageId":"131","endLine":125,"endColumn":14},{"ruleId":"128","severity":1,"message":"189","line":133,"column":9,"nodeType":"130","messageId":"131","endLine":133,"endColumn":21},{"ruleId":"128","severity":1,"message":"190","line":134,"column":9,"nodeType":"130","messageId":"131","endLine":134,"endColumn":26},{"ruleId":"128","severity":1,"message":"191","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":28},{"ruleId":"128","severity":1,"message":"192","line":5,"column":24,"nodeType":"130","messageId":"131","endLine":5,"endColumn":37},"no-unused-vars","'CurrencyMultipleSearchSelection' is defined but never used.","Identifier","unusedVar","'CurrencySearchSelection' is defined but never used.","no-native-reassign",["193"],"no-negated-in-lhs",["194"],"'useState' is defined but never used.",["193"],["194"],"'Dropdown' is defined but never used.","'setCurrencyDisplayType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currencyDisplayType'. Either include it or remove the dependency array.","ArrayExpression",["195"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setPolygonCountLength' is assigned a value but never used.","'setPolygonCountHeight' is assigned a value but never used.","'setDefaultUnitPolygon' is assigned a value but never used.","'setAxialArray' is assigned a value but never used.","'setCustomizedPolygons' is assigned a value but never used.","'setOrientationX' is assigned a value but never used.","'setOrientationY' is assigned a value but never used.","'setFloatNumFault' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'axialMap', 'defaultUnitPolygon.fillColor', 'defaultUnitPolygon.innerFillColor', 'defaultUnitPolygon.innerPolygonRatio', 'defaultUnitPolygon.strokeColor', 'floatNumFault', 'orientationX', and 'orientationY'. Either include them or remove the dependency array.",["196"],"'defaultUnitPolygon' is assigned a value but never used.","'setAxialMap' is assigned a value but never used.","'setWidthRatio' is assigned a value but never used.","'polygonCountHeight' is assigned a value but never used.","'setRadius' is assigned a value but never used.","'setEdgeOffsetRatio' is assigned a value but never used.","'setStartAngle' is assigned a value but never used.","'setNumSides' is assigned a value but never used.","'setCenterAng' is assigned a value but never used.","'setEdgeOffsetLen' is assigned a value but never used.","'setEdges' is assigned a value but never used.","'setGeneratedPoints' is assigned a value but never used.","'setPolygonCoordinates' is assigned a value but never used.","'setXDim' is assigned a value but never used.","'setYDim' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'centerAng', 'edgeOffsetLen', 'edges', 'numSides', 'radius', and 'startAngle'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPolygonCoordinatesInner' needs the current value of 'edges'.",["197"],"'setTextWithFontSize' is assigned a value but never used.","'setColor' is assigned a value but never used.","'setInnerPolygonFullnessRatio' is assigned a value but never used.","'startAngle' is assigned a value but never used.","'numSides' is assigned a value but never used.","'centerAng' is assigned a value but never used.","'generatedPoints' is assigned a value but never used.","'edgeOffsetLen' is assigned a value but never used.","'edges' is assigned a value but never used.","'textFontSize' is assigned a value but never used.","'innerPolygonRatio' is assigned a value but never used.","'RegularConvexPolygon' is defined but never used.","'setLineMargin' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},"Update the dependencies array to be: [props, currencyDisplaySource, currencyDisplayDestinations, currencyDisplayType]",{"range":"204","text":"205"},"Update the dependencies array to be: [axialMap, defaultUnitPolygon.fillColor, defaultUnitPolygon.innerFillColor, defaultUnitPolygon.innerPolygonRatio, defaultUnitPolygon.strokeColor, floatNumFault, orientationX, orientationY, props]",{"range":"206","text":"207"},"Update the dependencies array to be: [centerAng, edgeOffsetLen, edges, numSides, props, radius, startAngle]",{"range":"208","text":"209"},[4575,4634],"[props, currencyDisplaySource, currencyDisplayDestinations, currencyDisplayType]",[5856,5863],"[axialMap, defaultUnitPolygon.fillColor, defaultUnitPolygon.innerFillColor, defaultUnitPolygon.innerPolygonRatio, defaultUnitPolygon.strokeColor, floatNumFault, orientationX, orientationY, props]",[3034,3041],"[centerAng, edgeOffsetLen, edges, numSides, props, radius, startAngle]"]