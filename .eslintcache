[{"D:\\workspace\\exchange-ui\\src\\index.js":"1","D:\\workspace\\exchange-ui\\src\\App.js":"2","D:\\workspace\\exchange-ui\\src\\reportWebVitals.js":"3","D:\\workspace\\exchange-ui\\src\\MyFirstElement.js":"4","D:\\workspace\\exchange-ui\\src\\GitHubCards.js":"5","D:\\workspace\\exchange-ui\\src\\CurrencyElement.js":"6","D:\\workspace\\exchange-ui\\src\\HexagonElement.js":"7","D:\\workspace\\exchange-ui\\src\\CurrencyColors.js":"8","D:\\workspace\\exchange-ui\\src\\second_iteration\\TestComptForRegularConvexPolygon.js":"9","D:\\workspace\\exchange-ui\\src\\second_iteration\\HexagonGridUtils.js":"10","D:\\workspace\\exchange-ui\\src\\second_iteration\\ColorUtil.js":"11","D:\\workspace\\exchange-ui\\src\\second_iteration\\NumberTextUtil.js":"12","D:\\workspace\\exchange-ui\\src\\second_iteration\\RegularConvexPolygon.js":"13","D:\\workspace\\exchange-ui\\src\\second_iteration\\PolygonUtil.js":"14","D:\\workspace\\exchange-ui\\src\\second_iteration\\TestCompForPolygonGroup.js":"15","D:\\workspace\\exchange-ui\\src\\second_iteration\\PolygonGroup.js":"16"},{"size":921,"mtime":1612727004870,"results":"17","hashOfConfig":"18"},{"size":815,"mtime":1606335366352,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":904,"mtime":1606335326692,"results":"21","hashOfConfig":"18"},{"size":2326,"mtime":1608236532088,"results":"22","hashOfConfig":"18"},{"size":831,"mtime":1608616994339,"results":"23","hashOfConfig":"18"},{"size":15788,"mtime":1612644214455,"results":"24","hashOfConfig":"18"},{"size":11104,"mtime":1611610304951,"results":"25","hashOfConfig":"18"},{"size":1983,"mtime":1612726294906,"results":"26","hashOfConfig":"18"},{"size":1844,"mtime":1612644027648,"results":"27","hashOfConfig":"18"},{"size":572,"mtime":1612640494149,"results":"28","hashOfConfig":"18"},{"size":405,"mtime":1612644206876,"results":"29","hashOfConfig":"18"},{"size":5092,"mtime":1612813000927,"results":"30","hashOfConfig":"18"},{"size":1825,"mtime":1612470238246,"results":"31","hashOfConfig":"18"},{"size":841,"mtime":1612867179514,"results":"32","hashOfConfig":"18"},{"size":4136,"mtime":1612866939308,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"jvmnhy",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace\\exchange-ui\\src\\index.js",["71","72","73","74","75","76"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './demo.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Unified from \"./MyFirstElement\";\r\nimport Container from \"./GitHubCards\";\r\nimport CurrencyElement from \"./CurrencyElement\";\r\nimport PolygonSample from \"./HexagonElement\";\r\nimport TestComptForRegularConvexPolygon from \"./second_iteration/TestComptForRegularConvexPolygon\";\r\nimport TestComptForPolygonGroup from \"./second_iteration/TestCompForPolygonGroup\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <TestComptForPolygonGroup/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["77","78"],"D:\\workspace\\exchange-ui\\src\\App.js",["79"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from \"react\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <Hello/>\n                <p>Hello React!</p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </header>\n        </div>\n    );\n}\n\nfunction Hello() {\n    return <div>Hello func!</div>\n}\n\nexport default App;\n","D:\\workspace\\exchange-ui\\src\\reportWebVitals.js",[],"D:\\workspace\\exchange-ui\\src\\MyFirstElement.js",[],"D:\\workspace\\exchange-ui\\src\\GitHubCards.js",["80"],"import React from \"react\";\r\nimport './GitHubCards.css';\r\nimport axios from 'axios';\r\n\r\n/*\r\n* These URL does not give any CORS error on a Google cloud app, why? */\r\n\r\nconst testData = [\r\n    {name: \"Dan Abramov\", avatar_url: \"https://avatars0.githubusercontent.com/u/810438?v=4\", company: \"@facebook\"},\r\n    {name: \"Sophie Alpert\", avatar_url: \"https://avatars2.githubusercontent.com/u/6820?v=4\", company: \"Humu\"},\r\n    {name: \"Sebastian MarkbÃ¥ge\", avatar_url: \"https://avatars2.githubusercontent.com/u/63648?v=4\", company: \"Facebook\"},\r\n];\r\n\r\nconst CardList = (props) => (\r\n    <div>\r\n        {props.profiles.map(profile => <Card {...profile}/>)}\r\n    </div>\r\n);\r\n\r\nclass Form extends React.Component {\r\n    state = {userName: ''};\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\r\n        this.props.onSubmit(resp.data);\r\n    };\r\n    render() {\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.userName}\r\n                    onChange={event => this.setState({userName: event.target.value})}\r\n                    placeholder=\"GitHub username\"\r\n                    required\r\n                />\r\n                <button>Add card</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        const profile = this.props;\r\n        return (\r\n            <div className=\"github-profile\">\r\n                <img src={profile.avatar_url}/>\r\n                <div className=\"info\">\r\n                    <div className=\"name\">{profile.name}</div>\r\n                    <div className=\"company\">{profile.company}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Container extends React.Component {\r\n    state = {\r\n        profiles: testData\r\n    };\r\n    addNewProfile = (profileData) => {\r\n        this.setState(prevState => ({profiles: [...prevState.profiles,profileData]}));\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.addNewProfile}/>\r\n                <CardList profiles={this.state.profiles}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Container;","D:\\workspace\\exchange-ui\\src\\CurrencyElement.js",[],"D:\\workspace\\exchange-ui\\src\\HexagonElement.js",[],"D:\\workspace\\exchange-ui\\src\\CurrencyColors.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\TestComptForRegularConvexPolygon.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\HexagonGridUtils.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\ColorUtil.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\NumberTextUtil.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\RegularConvexPolygon.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"import React, {useState} from 'react'\r\nimport PolygonUtils from \"./PolygonUtil\";\r\n\r\nconst useRegularConvexPolygon = (props) => {\r\n\r\n    const [widthRatio, setWidthRatio] = useState(props.widthRatio);\r\n    const [radius, setRadius] = useState(30);\r\n    const [edgeOffsetRatio, setEdgeOffsetRatio] = useState(props.edgeOffsetRatio);\r\n    const [startAngle, setStartAngle] = useState(props.startAngle);\r\n    const [numSides, setNumSides] = useState(props.numSides);\r\n    const [fillColor, setFillColor] = useState(props.fillColor);\r\n    const [strokeColor, setStrokeColor] = useState(props.strokeColor);\r\n    const [text, setText] = useState(props.text);\r\n    const [textFontSize, setTextFontSize] = useState(props.textFontSize);\r\n    const [innerPolygonRatio, setInnerPolygonRatio] = useState(props.innerPolygonRatio);\r\n    const [innerFillColor, setInnerFillColor] = useState(props.innerFillColor);\r\n\r\n    const [centerAng, setCenterAng] = useState(2 * Math.PI / numSides);\r\n    const [edgeOffsetLen, setEdgeOffsetLen] = useState(radius * edgeOffsetRatio / 2);\r\n\r\n    const tempGeneratedPoints = PolygonUtils.generatePoints(\r\n        numSides,\r\n        radius,\r\n        centerAng,\r\n        startAngle);\r\n\r\n    let generatedPointsOuter = PolygonUtils.generatePoints(\r\n        numSides,\r\n        radius + edgeOffsetLen,\r\n        centerAng,\r\n        startAngle);\r\n\r\n    const tempGeneratedPointsInner = PolygonUtils.generatePoints(\r\n        numSides,\r\n        (radius + edgeOffsetLen) * innerPolygonRatio,\r\n        centerAng,\r\n        startAngle);\r\n\r\n\r\n    const [edges, setEdges] = useState(PolygonUtils.getEdgePoints(generatedPointsOuter));\r\n    let dimensions = PolygonUtils.getDimensions(edges);\r\n\r\n    const [generatedPoints, setGeneratedPoints] = useState(PolygonUtils.getShiftedPositiveQuadrant(tempGeneratedPoints, edges));\r\n    const [generatedPointsInner, setGeneratedPointsInner] = useState(PolygonUtils.getShiftedPositiveQuadrant(tempGeneratedPointsInner, edges));\r\n\r\n\r\n    const [polygonCoordinates, setPolygonCoordinates] = useState(generatedPoints.map(pair => pair.join(',')).join(' '));\r\n    const [polygonCoordinatesInner, setPolygonCoordinatesInner] = useState(generatedPointsInner.map(pair => pair.join(',')).join(' '));\r\n\r\n\r\n    const [xDim, setXDim] = useState(dimensions.xDim);\r\n    const [yDim, setYDim] = useState(dimensions.yDim);\r\n\r\n    const setTextWithFontSize = (text, textFontSize) => {\r\n        setText(text);\r\n        setTextFontSize(textFontSize);\r\n    }\r\n\r\n    const setColor = (fillColor, strokeColor, innerFillColor) => {\r\n        setFillColor(fillColor);\r\n        setStrokeColor(strokeColor);\r\n        setInnerFillColor(innerFillColor);\r\n    }\r\n\r\n    const setInnerPolygonFullnessRatio = (ratio) => {\r\n\r\n        let generatedPointsInner = PolygonUtils.generatePoints(\r\n            numSides,\r\n            (radius + edgeOffsetLen) * ratio,\r\n            centerAng,\r\n            startAngle);\r\n        generatedPointsInner = PolygonUtils.getShiftedPositiveQuadrant(generatedPointsInner, edges);\r\n        let polygonCoordinatesInner = generatedPointsInner.map(pair => pair.join(',')).join(' ');\r\n        setGeneratedPointsInner(generatedPointsInner);\r\n        setInnerPolygonRatio(ratio);\r\n        setPolygonCoordinatesInner(polygonCoordinatesInner);\r\n    }\r\n\r\n    return {\r\n        widthRatio,\r\n        edgeOffsetRatio,\r\n        startAngle,\r\n        numSides,\r\n        centerAng,\r\n        generatedPoints,\r\n        edgeOffsetLen,\r\n        edges,\r\n        xDim,\r\n        yDim,\r\n        polygonCoordinates,\r\n        polygonCoordinatesInner,\r\n        fillColor,\r\n        strokeColor,\r\n        text,\r\n        textFontSize,\r\n        innerPolygonRatio,\r\n        innerFillColor,\r\n    };\r\n}\r\n\r\nconst RegularConvexPolygon = (props) => {\r\n    const {\r\n        widthRatio,\r\n        edgeOffsetRatio,\r\n        startAngle,\r\n        numSides,\r\n        centerAng,\r\n        generatedPoints,\r\n        edgeOffsetLen,\r\n        edges,\r\n        xDim,\r\n        yDim,\r\n        polygonCoordinates,\r\n        polygonCoordinatesInner,\r\n        fillColor,\r\n        strokeColor,\r\n        text,\r\n        textFontSize,\r\n        innerPolygonRatio,\r\n        innerFillColor,\r\n    } = useRegularConvexPolygon(props);\r\n\r\n    return (\r\n        <svg\r\n            width={(widthRatio * 100) + \"%\"}\r\n            viewBox={\"0 0 \" + xDim + \" \" + yDim}\r\n            style={{verticalAlign: 'top'}}\r\n        >\r\n            <polygon points={polygonCoordinates} style={{\r\n                fill: fillColor,\r\n                stroke: strokeColor,\r\n                strokeWidth: (100 * edgeOffsetRatio) + \"%\",\r\n                verticalAlign: 'top'\r\n            }}/>\r\n            <polygon points={polygonCoordinatesInner} style={{\r\n                fill: innerFillColor,\r\n                verticalAlign: 'top'\r\n            }}/>\r\n            <text x=\"50%\" y=\"57%\" style={{whiteSpace: \"pre-line\"}} textAnchor=\"middle\" fontFamily=\"Arial\"\r\n                  fill=\"black\" fontSize={textFontSize} fontWeight=\"normal\">\r\n                {text}\r\n            </text>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default RegularConvexPolygon;","D:\\workspace\\exchange-ui\\src\\second_iteration\\PolygonUtil.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\TestCompForPolygonGroup.js",["103"],"D:\\workspace\\exchange-ui\\src\\second_iteration\\PolygonGroup.js",["104","105","106","107","108","109","110"],{"ruleId":"111","severity":1,"message":"112","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":11},{"ruleId":"111","severity":1,"message":"115","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":15},{"ruleId":"111","severity":1,"message":"116","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":17},{"ruleId":"111","severity":1,"message":"117","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":23},{"ruleId":"111","severity":1,"message":"118","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":21},{"ruleId":"111","severity":1,"message":"119","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":40},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"111","severity":1,"message":"124","line":3,"column":16,"nodeType":"113","messageId":"114","endLine":3,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":48,"column":17,"nodeType":"127","endLine":48,"endColumn":48},{"ruleId":"111","severity":1,"message":"128","line":6,"column":24,"nodeType":"113","messageId":"114","endLine":6,"endColumn":37},{"ruleId":"111","severity":1,"message":"129","line":7,"column":20,"nodeType":"113","messageId":"114","endLine":7,"endColumn":29},{"ruleId":"111","severity":1,"message":"130","line":8,"column":29,"nodeType":"113","messageId":"114","endLine":8,"endColumn":47},{"ruleId":"111","severity":1,"message":"131","line":9,"column":24,"nodeType":"113","messageId":"114","endLine":9,"endColumn":37},{"ruleId":"111","severity":1,"message":"132","line":10,"column":22,"nodeType":"113","messageId":"114","endLine":10,"endColumn":33},{"ruleId":"111","severity":1,"message":"133","line":18,"column":23,"nodeType":"113","messageId":"114","endLine":18,"endColumn":35},{"ruleId":"111","severity":1,"message":"134","line":19,"column":27,"nodeType":"113","messageId":"114","endLine":19,"endColumn":43},{"ruleId":"111","severity":1,"message":"135","line":40,"column":19,"nodeType":"113","messageId":"114","endLine":40,"endColumn":27},{"ruleId":"111","severity":1,"message":"136","line":43,"column":29,"nodeType":"113","messageId":"114","endLine":43,"endColumn":47},{"ruleId":"111","severity":1,"message":"137","line":47,"column":32,"nodeType":"113","messageId":"114","endLine":47,"endColumn":53},{"ruleId":"111","severity":1,"message":"138","line":51,"column":18,"nodeType":"113","messageId":"114","endLine":51,"endColumn":25},{"ruleId":"111","severity":1,"message":"139","line":52,"column":18,"nodeType":"113","messageId":"114","endLine":52,"endColumn":25},{"ruleId":"111","severity":1,"message":"140","line":54,"column":11,"nodeType":"113","messageId":"114","endLine":54,"endColumn":30},{"ruleId":"111","severity":1,"message":"141","line":59,"column":11,"nodeType":"113","messageId":"114","endLine":59,"endColumn":19},{"ruleId":"111","severity":1,"message":"142","line":65,"column":11,"nodeType":"113","messageId":"114","endLine":65,"endColumn":39},{"ruleId":"111","severity":1,"message":"143","line":105,"column":9,"nodeType":"113","messageId":"114","endLine":105,"endColumn":19},{"ruleId":"111","severity":1,"message":"144","line":106,"column":9,"nodeType":"113","messageId":"114","endLine":106,"endColumn":17},{"ruleId":"111","severity":1,"message":"145","line":107,"column":9,"nodeType":"113","messageId":"114","endLine":107,"endColumn":18},{"ruleId":"111","severity":1,"message":"146","line":108,"column":9,"nodeType":"113","messageId":"114","endLine":108,"endColumn":24},{"ruleId":"111","severity":1,"message":"147","line":109,"column":9,"nodeType":"113","messageId":"114","endLine":109,"endColumn":22},{"ruleId":"111","severity":1,"message":"148","line":110,"column":9,"nodeType":"113","messageId":"114","endLine":110,"endColumn":14},{"ruleId":"111","severity":1,"message":"149","line":119,"column":9,"nodeType":"113","messageId":"114","endLine":119,"endColumn":26},{"ruleId":"111","severity":1,"message":"119","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":40},{"ruleId":"111","severity":1,"message":"150","line":11,"column":32,"nodeType":"113","messageId":"114","endLine":11,"endColumn":53},{"ruleId":"111","severity":1,"message":"151","line":12,"column":32,"nodeType":"113","messageId":"114","endLine":12,"endColumn":53},{"ruleId":"111","severity":1,"message":"152","line":43,"column":24,"nodeType":"113","messageId":"114","endLine":43,"endColumn":37},{"ruleId":"111","severity":1,"message":"153","line":44,"column":22,"nodeType":"113","messageId":"114","endLine":44,"endColumn":33},{"ruleId":"111","severity":1,"message":"154","line":45,"column":32,"nodeType":"113","messageId":"114","endLine":45,"endColumn":53},{"ruleId":"111","severity":1,"message":"155","line":59,"column":9,"nodeType":"113","messageId":"114","endLine":59,"endColumn":27},{"ruleId":"111","severity":1,"message":"156","line":62,"column":9,"nodeType":"113","messageId":"114","endLine":62,"endColumn":27},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Unified' is defined but never used.","'Container' is defined but never used.","'CurrencyElement' is defined but never used.","'PolygonSample' is defined but never used.","'TestComptForRegularConvexPolygon' is defined but never used.","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setWidthRatio' is assigned a value but never used.","'setRadius' is assigned a value but never used.","'setEdgeOffsetRatio' is assigned a value but never used.","'setStartAngle' is assigned a value but never used.","'setNumSides' is assigned a value but never used.","'setCenterAng' is assigned a value but never used.","'setEdgeOffsetLen' is assigned a value but never used.","'setEdges' is assigned a value but never used.","'setGeneratedPoints' is assigned a value but never used.","'setPolygonCoordinates' is assigned a value but never used.","'setXDim' is assigned a value but never used.","'setYDim' is assigned a value but never used.","'setTextWithFontSize' is assigned a value but never used.","'setColor' is assigned a value but never used.","'setInnerPolygonFullnessRatio' is assigned a value but never used.","'startAngle' is assigned a value but never used.","'numSides' is assigned a value but never used.","'centerAng' is assigned a value but never used.","'generatedPoints' is assigned a value but never used.","'edgeOffsetLen' is assigned a value but never used.","'edges' is assigned a value but never used.","'innerPolygonRatio' is assigned a value but never used.","'setPolygonCountLength' is assigned a value but never used.","'setPolygonCountHeight' is assigned a value but never used.","'setAxialArray' is assigned a value but never used.","'setAxialMap' is assigned a value but never used.","'setDefaultUnitPolygon' is assigned a value but never used.","'polygonCountHeight' is assigned a value but never used.","'defaultUnitPolygon' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]