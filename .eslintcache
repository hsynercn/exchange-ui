[{"D:\\workspace\\exchange-ui\\src\\index.js":"1","D:\\workspace\\exchange-ui\\src\\App.js":"2","D:\\workspace\\exchange-ui\\src\\reportWebVitals.js":"3","D:\\workspace\\exchange-ui\\src\\MyFirstElement.js":"4","D:\\workspace\\exchange-ui\\src\\GitHubCards.js":"5","D:\\workspace\\exchange-ui\\src\\CurrencyElement.js":"6","D:\\workspace\\exchange-ui\\src\\HexagonElement.js":"7","D:\\workspace\\exchange-ui\\src\\CurrencyColors.js":"8","D:\\workspace\\exchange-ui\\src\\second_iteration\\TestComptForRegularConvexPolygon.js":"9","D:\\workspace\\exchange-ui\\src\\second_iteration\\HexagonGridUtils.js":"10","D:\\workspace\\exchange-ui\\src\\second_iteration\\ColorUtil.js":"11","D:\\workspace\\exchange-ui\\src\\second_iteration\\RegularConvexPolygon.js":"12","D:\\workspace\\exchange-ui\\src\\second_iteration\\PolygonUtil.js":"13","D:\\workspace\\exchange-ui\\src\\second_iteration\\TestCompForPolygonGroup.js":"14","D:\\workspace\\exchange-ui\\src\\second_iteration\\PolygonGroup.js":"15","D:\\workspace\\exchange-ui\\src\\second_iteration\\TestCompForRadialCurrencyDisplay.js":"16","D:\\workspace\\exchange-ui\\src\\second_iteration\\NumberFormattingUtil.js":"17","D:\\workspace\\exchange-ui\\src\\second_iteration\\CurrencyMultipleSearchSelection.js":"18","D:\\workspace\\exchange-ui\\src\\second_iteration\\CurrencySearchSelection.js":"19","D:\\workspace\\exchange-ui\\src\\second_iteration\\CurrencyGridDisplay.js":"20"},{"size":959,"mtime":1613159081405,"results":"21","hashOfConfig":"22"},{"size":815,"mtime":1606335366352,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":904,"mtime":1606335326692,"results":"25","hashOfConfig":"22"},{"size":2326,"mtime":1608236532088,"results":"26","hashOfConfig":"22"},{"size":831,"mtime":1608616994339,"results":"27","hashOfConfig":"22"},{"size":15137,"mtime":1612899629989,"results":"28","hashOfConfig":"22"},{"size":11104,"mtime":1613075706574,"results":"29","hashOfConfig":"22"},{"size":1983,"mtime":1612726294906,"results":"30","hashOfConfig":"22"},{"size":3211,"mtime":1612990567792,"results":"31","hashOfConfig":"22"},{"size":572,"mtime":1612640494149,"results":"32","hashOfConfig":"22"},{"size":5730,"mtime":1613069940947,"results":"33","hashOfConfig":"22"},{"size":2735,"mtime":1612986665275,"results":"34","hashOfConfig":"22"},{"size":841,"mtime":1612867179514,"results":"35","hashOfConfig":"22"},{"size":3006,"mtime":1612989018490,"results":"36","hashOfConfig":"22"},{"size":796,"mtime":1613162182998,"results":"37","hashOfConfig":"22"},{"size":893,"mtime":1613073106422,"results":"38","hashOfConfig":"22"},{"size":1975,"mtime":1613161086356,"results":"39","hashOfConfig":"22"},{"size":397,"mtime":1613162183040,"results":"40","hashOfConfig":"22"},{"size":6751,"mtime":1613162183053,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jvmnhy",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace\\exchange-ui\\src\\index.js",[],"D:\\workspace\\exchange-ui\\src\\App.js",["88"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from \"react\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <Hello/>\n                <p>Hello React!</p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </header>\n        </div>\n    );\n}\n\nfunction Hello() {\n    return <div>Hello func!</div>\n}\n\nexport default App;\n",["89","90"],"D:\\workspace\\exchange-ui\\src\\reportWebVitals.js",[],["91","92"],"D:\\workspace\\exchange-ui\\src\\MyFirstElement.js",[],"D:\\workspace\\exchange-ui\\src\\GitHubCards.js",["93"],"import React from \"react\";\r\nimport './GitHubCards.css';\r\nimport axios from 'axios';\r\n\r\n/*\r\n* These URL does not give any CORS error on a Google cloud app, why? */\r\n\r\nconst testData = [\r\n    {name: \"Dan Abramov\", avatar_url: \"https://avatars0.githubusercontent.com/u/810438?v=4\", company: \"@facebook\"},\r\n    {name: \"Sophie Alpert\", avatar_url: \"https://avatars2.githubusercontent.com/u/6820?v=4\", company: \"Humu\"},\r\n    {name: \"Sebastian MarkbÃ¥ge\", avatar_url: \"https://avatars2.githubusercontent.com/u/63648?v=4\", company: \"Facebook\"},\r\n];\r\n\r\nconst CardList = (props) => (\r\n    <div>\r\n        {props.profiles.map(profile => <Card {...profile}/>)}\r\n    </div>\r\n);\r\n\r\nclass Form extends React.Component {\r\n    state = {userName: ''};\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\r\n        this.props.onSubmit(resp.data);\r\n    };\r\n    render() {\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.userName}\r\n                    onChange={event => this.setState({userName: event.target.value})}\r\n                    placeholder=\"GitHub username\"\r\n                    required\r\n                />\r\n                <button>Add card</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        const profile = this.props;\r\n        return (\r\n            <div className=\"github-profile\">\r\n                <img src={profile.avatar_url}/>\r\n                <div className=\"info\">\r\n                    <div className=\"name\">{profile.name}</div>\r\n                    <div className=\"company\">{profile.company}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Container extends React.Component {\r\n    state = {\r\n        profiles: testData\r\n    };\r\n    addNewProfile = (profileData) => {\r\n        this.setState(prevState => ({profiles: [...prevState.profiles,profileData]}));\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.addNewProfile}/>\r\n                <CardList profiles={this.state.profiles}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Container;","D:\\workspace\\exchange-ui\\src\\CurrencyElement.js",[],"D:\\workspace\\exchange-ui\\src\\HexagonElement.js",[],"D:\\workspace\\exchange-ui\\src\\CurrencyColors.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\TestComptForRegularConvexPolygon.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\HexagonGridUtils.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\ColorUtil.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\RegularConvexPolygon.js",["94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React, {useEffect, useState} from 'react'\r\nimport PolygonUtils from \"./PolygonUtil\";\r\n\r\nconst useRegularConvexPolygon = (props) => {\r\n\r\n    const [widthRatio, setWidthRatio] = useState(props.widthRatio);\r\n    const [radius, setRadius] = useState(30);\r\n    const [edgeOffsetRatio, setEdgeOffsetRatio] = useState(props.edgeOffsetRatio);\r\n    const [startAngle, setStartAngle] = useState(props.startAngle);\r\n    const [numSides, setNumSides] = useState(props.numSides);\r\n    const [fillColor, setFillColor] = useState(props.fillColor);\r\n    const [strokeColor, setStrokeColor] = useState(props.strokeColor);\r\n    const [text, setText] = useState(props.text);\r\n    const [textFontSize, setTextFontSize] = useState(props.textFontSize);\r\n    const [innerPolygonRatio, setInnerPolygonRatio] = useState(props.innerPolygonRatio);\r\n    const [innerFillColor, setInnerFillColor] = useState(props.innerFillColor);\r\n\r\n    const [centerAng, setCenterAng] = useState(2 * Math.PI / numSides);\r\n    const [edgeOffsetLen, setEdgeOffsetLen] = useState(radius * edgeOffsetRatio / 2);\r\n\r\n    const tempGeneratedPoints = PolygonUtils.generatePoints(\r\n        numSides,\r\n        radius,\r\n        centerAng,\r\n        startAngle);\r\n\r\n    let generatedPointsOuter = PolygonUtils.generatePoints(\r\n        numSides,\r\n        radius + edgeOffsetLen,\r\n        centerAng,\r\n        startAngle);\r\n\r\n    const tempGeneratedPointsInner = PolygonUtils.generatePoints(\r\n        numSides,\r\n        (radius + edgeOffsetLen) * innerPolygonRatio,\r\n        centerAng,\r\n        startAngle);\r\n\r\n\r\n    const [edges, setEdges] = useState(PolygonUtils.getEdgePoints(generatedPointsOuter));\r\n    let dimensions = PolygonUtils.getDimensions(edges);\r\n\r\n    const [generatedPoints, setGeneratedPoints] = useState(PolygonUtils.getShiftedPositiveQuadrant(tempGeneratedPoints, edges));\r\n    const [generatedPointsInner, setGeneratedPointsInner] = useState(PolygonUtils.getShiftedPositiveQuadrant(tempGeneratedPointsInner, edges));\r\n\r\n    const [polygonCoordinates, setPolygonCoordinates] = useState(generatedPoints.map(pair => pair.join(',')).join(' '));\r\n    const [polygonCoordinatesInner, setPolygonCoordinatesInner] = useState(generatedPointsInner.map(pair => pair.join(',')).join(' '));\r\n\r\n    const [xDim, setXDim] = useState(dimensions.xDim);\r\n    const [yDim, setYDim] = useState(dimensions.yDim);\r\n\r\n    useEffect(() => {\r\n        setFillColor(props.fillColor);\r\n        setStrokeColor(props.strokeColor);\r\n        setInnerFillColor(props.innerFillColor);\r\n        setInnerPolygonRatio(props.innerPolygonRatio);\r\n        setText(props.text);\r\n        setTextFontSize(props.textFontSize);\r\n\r\n        const tempGeneratedPointsInner = PolygonUtils.generatePoints(\r\n            numSides,\r\n            (radius + edgeOffsetLen) * props.innerPolygonRatio,\r\n            centerAng,\r\n            startAngle);\r\n        setPolygonCoordinatesInner(PolygonUtils.getShiftedPositiveQuadrant(tempGeneratedPointsInner, edges));\r\n\r\n    }, [props]);\r\n\r\n    const setTextWithFontSize = (text, textFontSize) => {\r\n        setText(text);\r\n        setTextFontSize(textFontSize);\r\n    }\r\n\r\n    const setColor = (fillColor, strokeColor, innerFillColor) => {\r\n        setFillColor(fillColor);\r\n        setStrokeColor(strokeColor);\r\n        setInnerFillColor(innerFillColor);\r\n    }\r\n\r\n    const setInnerPolygonFullnessRatio = (ratio) => {\r\n        let generatedPointsInner = PolygonUtils.generatePoints(\r\n            numSides,\r\n            (radius + edgeOffsetLen) * ratio,\r\n            centerAng,\r\n            startAngle);\r\n        generatedPointsInner = PolygonUtils.getShiftedPositiveQuadrant(generatedPointsInner, edges);\r\n        let polygonCoordinatesInner = generatedPointsInner.map(pair => pair.join(',')).join(' ');\r\n        setGeneratedPointsInner(generatedPointsInner);\r\n        setInnerPolygonRatio(ratio);\r\n        setPolygonCoordinatesInner(polygonCoordinatesInner);\r\n    }\r\n\r\n    return {\r\n        widthRatio,\r\n        edgeOffsetRatio,\r\n        startAngle,\r\n        numSides,\r\n        centerAng,\r\n        generatedPoints,\r\n        edgeOffsetLen,\r\n        edges,\r\n        xDim,\r\n        yDim,\r\n        polygonCoordinates,\r\n        polygonCoordinatesInner,\r\n        fillColor,\r\n        strokeColor,\r\n        text,\r\n        textFontSize,\r\n        innerPolygonRatio,\r\n        innerFillColor,\r\n    };\r\n}\r\n\r\nconst RegularConvexPolygon = (props) => {\r\n    const {\r\n        widthRatio,\r\n        edgeOffsetRatio,\r\n        startAngle,\r\n        numSides,\r\n        centerAng,\r\n        generatedPoints,\r\n        edgeOffsetLen,\r\n        edges,\r\n        xDim,\r\n        yDim,\r\n        polygonCoordinates,\r\n        polygonCoordinatesInner,\r\n        fillColor,\r\n        strokeColor,\r\n        text,\r\n        textFontSize,\r\n        innerPolygonRatio,\r\n        innerFillColor,\r\n    } = useRegularConvexPolygon(props);\r\n\r\n    return (\r\n        <svg\r\n            width={(widthRatio * 100) + \"%\"}\r\n            viewBox={\"0 0 \" + xDim + \" \" + yDim}\r\n            style={{verticalAlign: 'top'}}\r\n        >\r\n            <polygon points={polygonCoordinates} style={{\r\n                fill: fillColor,\r\n                stroke: strokeColor,\r\n                strokeWidth: (100 * edgeOffsetRatio) + \"%\",\r\n                verticalAlign: 'top'\r\n            }}/>\r\n            <polygon points={polygonCoordinatesInner} style={{\r\n                fill: innerFillColor,\r\n                verticalAlign: 'top'\r\n            }}/>\r\n            <text x=\"50%\" y=\"57%\" style={{whiteSpace: \"pre-line\"}} textAnchor=\"middle\" fontFamily=\"Arial\"\r\n                  fill=\"black\" fontSize={textFontSize} fontWeight=\"normal\">\r\n                {text}\r\n            </text>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default RegularConvexPolygon;","D:\\workspace\\exchange-ui\\src\\second_iteration\\PolygonUtil.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\TestCompForPolygonGroup.js",["117"],"D:\\workspace\\exchange-ui\\src\\second_iteration\\PolygonGroup.js",["118","119","120","121","122","123"],"import RegularConvexPolygon from \"./RegularConvexPolygon\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst usePolygonGroup = (props) => {\r\n\r\n    let length = props.polygonCountLength;\r\n    let height = props.polygonCountHeight;\r\n    length = length % 2 === 1 ? length : length + 1;\r\n    height = height % 2 === 1 ? height : height + 1;\r\n\r\n    const [polygonCountLength, setPolygonCountLength] = useState(length);\r\n    const [polygonCountHeight, setPolygonCountHeight] = useState(height);\r\n\r\n    const [axialArray, setAxialArray] = useState(props.axialArray);\r\n    const [axialMap, setAxialMap] = useState(props.axialMap);\r\n\r\n    const[widthRatio, setWidthRatio] = useState(1 / polygonCountLength);\r\n\r\n    return {\r\n        polygonCountLength,\r\n        polygonCountHeight,\r\n        axialArray,\r\n        axialMap,\r\n        widthRatio\r\n    };\r\n}\r\n\r\nconst PolygonGroup = (props) => {\r\n    const {\r\n        polygonCountLength,\r\n        polygonCountHeight,\r\n        axialArray,\r\n        axialMap,\r\n        widthRatio,\r\n    } = usePolygonGroup(props);\r\n\r\n    const horizontalMargin = (1 / ((polygonCountLength * 2) + 1)) * 100;\r\n    const verticalMargin = horizontalMargin / Math.sqrt(3)\r\n\r\n    return (\r\n        <div style={{\r\n            width: \"80%\",\r\n            overflowX: \"auto\",\r\n            overflowY: \"auto\",\r\n            margin: \"0 auto\"\r\n        }}>\r\n            {\r\n                axialArray.map((row, index) => {\r\n\r\n                        let dynamicStyle = {};\r\n                        if (axialArray.length === index + 1) {\r\n                            dynamicStyle = {\r\n                                marginRight: horizontalMargin + \"%\",\r\n                            };\r\n                        } else if (index % 2 === 0) {\r\n                            if (index === 0) {\r\n                                dynamicStyle = {\r\n                                    marginRight: horizontalMargin + \"%\",\r\n                                    marginBottom: \"-\" + verticalMargin + \"%\",\r\n                                };\r\n                            } else {\r\n                                dynamicStyle = {\r\n                                    marginRight: horizontalMargin + \"%\",\r\n                                    marginBottom: \"-\" + verticalMargin + \"%\",\r\n                                };\r\n                            }\r\n                        } else {\r\n\r\n                            dynamicStyle = {\r\n                                marginLeft: horizontalMargin + \"%\",\r\n                                marginBottom: \"-\" + verticalMargin + \"%\",\r\n                            };\r\n\r\n                        }\r\n                        return <div\r\n                            style={dynamicStyle}>{\r\n                            row.map((element) => <RegularConvexPolygon widthRatio={widthRatio} {...axialMap[element]}\r\n                            />)\r\n                        }</div>\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default PolygonGroup;","D:\\workspace\\exchange-ui\\src\\second_iteration\\TestCompForRadialCurrencyDisplay.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\NumberFormattingUtil.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\CurrencyMultipleSearchSelection.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\CurrencySearchSelection.js",[],"D:\\workspace\\exchange-ui\\src\\second_iteration\\CurrencyGridDisplay.js",["124","125","126","127","128","129","130","131","132","133","134","135"],{"ruleId":"136","severity":1,"message":"137","line":3,"column":16,"nodeType":"138","messageId":"139","endLine":3,"endColumn":24},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":48,"column":17,"nodeType":"148","endLine":48,"endColumn":48},{"ruleId":"136","severity":1,"message":"149","line":6,"column":24,"nodeType":"138","messageId":"139","endLine":6,"endColumn":37},{"ruleId":"136","severity":1,"message":"150","line":7,"column":20,"nodeType":"138","messageId":"139","endLine":7,"endColumn":29},{"ruleId":"136","severity":1,"message":"151","line":8,"column":29,"nodeType":"138","messageId":"139","endLine":8,"endColumn":47},{"ruleId":"136","severity":1,"message":"152","line":9,"column":24,"nodeType":"138","messageId":"139","endLine":9,"endColumn":37},{"ruleId":"136","severity":1,"message":"153","line":10,"column":22,"nodeType":"138","messageId":"139","endLine":10,"endColumn":33},{"ruleId":"136","severity":1,"message":"154","line":18,"column":23,"nodeType":"138","messageId":"139","endLine":18,"endColumn":35},{"ruleId":"136","severity":1,"message":"155","line":19,"column":27,"nodeType":"138","messageId":"139","endLine":19,"endColumn":43},{"ruleId":"136","severity":1,"message":"156","line":40,"column":19,"nodeType":"138","messageId":"139","endLine":40,"endColumn":27},{"ruleId":"136","severity":1,"message":"157","line":43,"column":29,"nodeType":"138","messageId":"139","endLine":43,"endColumn":47},{"ruleId":"136","severity":1,"message":"158","line":46,"column":32,"nodeType":"138","messageId":"139","endLine":46,"endColumn":53},{"ruleId":"136","severity":1,"message":"159","line":49,"column":18,"nodeType":"138","messageId":"139","endLine":49,"endColumn":25},{"ruleId":"136","severity":1,"message":"160","line":50,"column":18,"nodeType":"138","messageId":"139","endLine":50,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":67,"column":8,"nodeType":"163","endLine":67,"endColumn":15,"suggestions":"164"},{"ruleId":"136","severity":1,"message":"165","line":69,"column":11,"nodeType":"138","messageId":"139","endLine":69,"endColumn":30},{"ruleId":"136","severity":1,"message":"166","line":74,"column":11,"nodeType":"138","messageId":"139","endLine":74,"endColumn":19},{"ruleId":"136","severity":1,"message":"167","line":80,"column":11,"nodeType":"138","messageId":"139","endLine":80,"endColumn":39},{"ruleId":"136","severity":1,"message":"168","line":119,"column":9,"nodeType":"138","messageId":"139","endLine":119,"endColumn":19},{"ruleId":"136","severity":1,"message":"169","line":120,"column":9,"nodeType":"138","messageId":"139","endLine":120,"endColumn":17},{"ruleId":"136","severity":1,"message":"170","line":121,"column":9,"nodeType":"138","messageId":"139","endLine":121,"endColumn":18},{"ruleId":"136","severity":1,"message":"171","line":122,"column":9,"nodeType":"138","messageId":"139","endLine":122,"endColumn":24},{"ruleId":"136","severity":1,"message":"172","line":123,"column":9,"nodeType":"138","messageId":"139","endLine":123,"endColumn":22},{"ruleId":"136","severity":1,"message":"173","line":124,"column":9,"nodeType":"138","messageId":"139","endLine":124,"endColumn":14},{"ruleId":"136","severity":1,"message":"174","line":133,"column":9,"nodeType":"138","messageId":"139","endLine":133,"endColumn":26},{"ruleId":"136","severity":1,"message":"175","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":40},{"ruleId":"136","severity":1,"message":"176","line":11,"column":32,"nodeType":"138","messageId":"139","endLine":11,"endColumn":53},{"ruleId":"136","severity":1,"message":"177","line":12,"column":32,"nodeType":"138","messageId":"139","endLine":12,"endColumn":53},{"ruleId":"136","severity":1,"message":"178","line":14,"column":24,"nodeType":"138","messageId":"139","endLine":14,"endColumn":37},{"ruleId":"136","severity":1,"message":"179","line":15,"column":22,"nodeType":"138","messageId":"139","endLine":15,"endColumn":33},{"ruleId":"136","severity":1,"message":"149","line":17,"column":23,"nodeType":"138","messageId":"139","endLine":17,"endColumn":36},{"ruleId":"136","severity":1,"message":"180","line":31,"column":9,"nodeType":"138","messageId":"139","endLine":31,"endColumn":27},{"ruleId":"136","severity":1,"message":"176","line":11,"column":32,"nodeType":"138","messageId":"139","endLine":11,"endColumn":53},{"ruleId":"136","severity":1,"message":"177","line":12,"column":32,"nodeType":"138","messageId":"139","endLine":12,"endColumn":53},{"ruleId":"136","severity":1,"message":"181","line":13,"column":32,"nodeType":"138","messageId":"139","endLine":13,"endColumn":53},{"ruleId":"136","severity":1,"message":"178","line":17,"column":24,"nodeType":"138","messageId":"139","endLine":17,"endColumn":37},{"ruleId":"136","severity":1,"message":"182","line":20,"column":34,"nodeType":"138","messageId":"139","endLine":20,"endColumn":57},{"ruleId":"136","severity":1,"message":"183","line":25,"column":32,"nodeType":"138","messageId":"139","endLine":25,"endColumn":53},{"ruleId":"136","severity":1,"message":"184","line":26,"column":26,"nodeType":"138","messageId":"139","endLine":26,"endColumn":41},{"ruleId":"136","severity":1,"message":"185","line":27,"column":26,"nodeType":"138","messageId":"139","endLine":27,"endColumn":41},{"ruleId":"136","severity":1,"message":"186","line":28,"column":27,"nodeType":"138","messageId":"139","endLine":28,"endColumn":43},{"ruleId":"136","severity":1,"message":"187","line":56,"column":45,"nodeType":"138","messageId":"139","endLine":56,"endColumn":57},{"ruleId":"161","severity":1,"message":"188","line":96,"column":8,"nodeType":"163","endLine":96,"endColumn":10,"suggestions":"189"},{"ruleId":"136","severity":1,"message":"190","line":104,"column":9,"nodeType":"138","messageId":"139","endLine":104,"endColumn":27},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["191"],"no-negated-in-lhs",["192"],["191"],["192"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setWidthRatio' is assigned a value but never used.","'setRadius' is assigned a value but never used.","'setEdgeOffsetRatio' is assigned a value but never used.","'setStartAngle' is assigned a value but never used.","'setNumSides' is assigned a value but never used.","'setCenterAng' is assigned a value but never used.","'setEdgeOffsetLen' is assigned a value but never used.","'setEdges' is assigned a value but never used.","'setGeneratedPoints' is assigned a value but never used.","'setPolygonCoordinates' is assigned a value but never used.","'setXDim' is assigned a value but never used.","'setYDim' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'centerAng', 'edgeOffsetLen', 'edges', 'numSides', 'radius', and 'startAngle'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPolygonCoordinatesInner' needs the current value of 'edges'.","ArrayExpression",["193"],"'setTextWithFontSize' is assigned a value but never used.","'setColor' is assigned a value but never used.","'setInnerPolygonFullnessRatio' is assigned a value but never used.","'startAngle' is assigned a value but never used.","'numSides' is assigned a value but never used.","'centerAng' is assigned a value but never used.","'generatedPoints' is assigned a value but never used.","'edgeOffsetLen' is assigned a value but never used.","'edges' is assigned a value but never used.","'innerPolygonRatio' is assigned a value but never used.","'TestComptForRegularConvexPolygon' is defined but never used.","'setPolygonCountLength' is assigned a value but never used.","'setPolygonCountHeight' is assigned a value but never used.","'setAxialArray' is assigned a value but never used.","'setAxialMap' is assigned a value but never used.","'polygonCountHeight' is assigned a value but never used.","'setDefaultUnitPolygon' is assigned a value but never used.","'setDisplayConfiguration' is assigned a value but never used.","'setCustomizedPolygons' is assigned a value but never used.","'setOrientationX' is assigned a value but never used.","'setOrientationY' is assigned a value but never used.","'setFloatNumFault' is assigned a value but never used.","'segmentCount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axialMap', 'displayConfiguration.currencyList', 'displayConfiguration.type', 'floatNumFault', 'orientationX', and 'orientationY'. Either include them or remove the dependency array.",["194"],"'defaultUnitPolygon' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [centerAng, edgeOffsetLen, edges, numSides, props, radius, startAngle]",{"range":"199","text":"200"},"Update the dependencies array to be: [axialMap, displayConfiguration.currencyList, displayConfiguration.type, floatNumFault, orientationX, orientationY]",{"range":"201","text":"202"},[2982,2989],"[centerAng, edgeOffsetLen, edges, numSides, props, radius, startAngle]",[5571,5573],"[axialMap, displayConfiguration.currencyList, displayConfiguration.type, floatNumFault, orientationX, orientationY]"]